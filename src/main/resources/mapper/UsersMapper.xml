<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trust.xfyl.dao.UsersMapper">
    <resultMap id="BaseResultMap" type="com.trust.xfyl.model.po.Users">
        <id column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="openid" property="openid" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="avatar_url" property="avatarUrl" jdbcType="VARCHAR"/>
        <result column="register_time" property="registerTime" jdbcType="TIMESTAMP"/>
        <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP"/>
        <result column="initial_credit_count" property="initialCreditCount" jdbcType="INTEGER"/>
        <result column="current_credit_count" property="currentCreditCount" jdbcType="INTEGER"/>
        <result column="contact_info" property="contactInfo" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="is_delete" property="isDelete" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        user_id, openid, email, user_name, nickname, avatar_url, register_time, last_login_time,
    initial_credit_count, current_credit_count, contact_info, create_time, is_delete
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.trust.xfyl.model.po.UsersExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from users
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from users
        where user_id = #{userId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from users
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.trust.xfyl.model.po.UsersExample">
        delete from users
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.trust.xfyl.model.po.Users">
        insert into users (user_id, openid, email,
                           user_name, nickname, avatar_url,
                           register_time, last_login_time, initial_credit_count,
                           current_credit_count, contact_info, create_time,
                           is_delete)
        values (#{userId,jdbcType=INTEGER}, #{openid,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
                #{userName,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, #{avatarUrl,jdbcType=VARCHAR},
                #{registerTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP},
                #{initialCreditCount,jdbcType=INTEGER},
                #{currentCreditCount,jdbcType=INTEGER}, #{contactInfo,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP},
                #{isDelete,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.trust.xfyl.model.po.Users">
        insert into users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="openid != null">
                openid,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="avatarUrl != null">
                avatar_url,
            </if>
            <if test="registerTime != null">
                register_time,
            </if>
            <if test="lastLoginTime != null">
                last_login_time,
            </if>
            <if test="initialCreditCount != null">
                initial_credit_count,
            </if>
            <if test="currentCreditCount != null">
                current_credit_count,
            </if>
            <if test="contactInfo != null">
                contact_info,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="openid != null">
                #{openid,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="avatarUrl != null">
                #{avatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="registerTime != null">
                #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginTime != null">
                #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="initialCreditCount != null">
                #{initialCreditCount,jdbcType=INTEGER},
            </if>
            <if test="currentCreditCount != null">
                #{currentCreditCount,jdbcType=INTEGER},
            </if>
            <if test="contactInfo != null">
                #{contactInfo,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.trust.xfyl.model.po.UsersExample" resultType="java.lang.Integer">
        select count(*) from users
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update users
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.openid != null">
                openid = #{record.openid,jdbcType=VARCHAR},
            </if>
            <if test="record.email != null">
                email = #{record.email,jdbcType=VARCHAR},
            </if>
            <if test="record.userName != null">
                user_name = #{record.userName,jdbcType=VARCHAR},
            </if>
            <if test="record.nickname != null">
                nickname = #{record.nickname,jdbcType=VARCHAR},
            </if>
            <if test="record.avatarUrl != null">
                avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.registerTime != null">
                register_time = #{record.registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lastLoginTime != null">
                last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.initialCreditCount != null">
                initial_credit_count = #{record.initialCreditCount,jdbcType=INTEGER},
            </if>
            <if test="record.currentCreditCount != null">
                current_credit_count = #{record.currentCreditCount,jdbcType=INTEGER},
            </if>
            <if test="record.contactInfo != null">
                contact_info = #{record.contactInfo,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update users
        set user_id = #{record.userId,jdbcType=INTEGER},
        openid = #{record.openid,jdbcType=VARCHAR},
        email = #{record.email,jdbcType=VARCHAR},
        user_name = #{record.userName,jdbcType=VARCHAR},
        nickname = #{record.nickname,jdbcType=VARCHAR},
        avatar_url = #{record.avatarUrl,jdbcType=VARCHAR},
        register_time = #{record.registerTime,jdbcType=TIMESTAMP},
        last_login_time = #{record.lastLoginTime,jdbcType=TIMESTAMP},
        initial_credit_count = #{record.initialCreditCount,jdbcType=INTEGER},
        current_credit_count = #{record.currentCreditCount,jdbcType=INTEGER},
        contact_info = #{record.contactInfo,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        is_delete = #{record.isDelete,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.trust.xfyl.model.po.Users">
        update users
        <set>
            <if test="openid != null">
                openid = #{openid,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="avatarUrl != null">
                avatar_url = #{avatarUrl,jdbcType=VARCHAR},
            </if>
            <if test="registerTime != null">
                register_time = #{registerTime,jdbcType=TIMESTAMP},
            </if>
            <if test="lastLoginTime != null">
                last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
            </if>
            <if test="initialCreditCount != null">
                initial_credit_count = #{initialCreditCount,jdbcType=INTEGER},
            </if>
            <if test="currentCreditCount != null">
                current_credit_count = #{currentCreditCount,jdbcType=INTEGER},
            </if>
            <if test="contactInfo != null">
                contact_info = #{contactInfo,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.trust.xfyl.model.po.Users">
        update users
        set openid               = #{openid,jdbcType=VARCHAR},
            email                = #{email,jdbcType=VARCHAR},
            user_name            = #{userName,jdbcType=VARCHAR},
            nickname             = #{nickname,jdbcType=VARCHAR},
            avatar_url           = #{avatarUrl,jdbcType=VARCHAR},
            register_time        = #{registerTime,jdbcType=TIMESTAMP},
            last_login_time      = #{lastLoginTime,jdbcType=TIMESTAMP},
            initial_credit_count = #{initialCreditCount,jdbcType=INTEGER},
            current_credit_count = #{currentCreditCount,jdbcType=INTEGER},
            contact_info         = #{contactInfo,jdbcType=VARCHAR},
            create_time          = #{createTime,jdbcType=TIMESTAMP},
            is_delete            = #{isDelete,jdbcType=INTEGER}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
</mapper>