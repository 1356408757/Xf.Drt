<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.trust.xfyl.dao.TrustFileMapper">
    <resultMap id="BaseResultMap" type="com.trust.xfyl.model.po.TrustFile">
        <id column="file_id" property="fileId" jdbcType="INTEGER"/>
        <result column="file_name" property="fileName" jdbcType="VARCHAR"/>
        <result column="file_origin_name" property="fileOriginName" jdbcType="VARCHAR"/>
        <result column="file_url" property="fileUrl" jdbcType="VARCHAR"/>
        <result column="is_delete" property="isDelete" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        file_id, file_name, file_origin_name, file_url, is_delete, create_time, creator
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.trust.xfyl.model.po.TrustFileExample">
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from trust_file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        limit #{start,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from trust_file
        where file_id = #{fileId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from trust_file
        where file_id = #{fileId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.trust.xfyl.model.po.TrustFileExample">
        delete from trust_file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.trust.xfyl.model.po.TrustFile" useGeneratedKeys="true"
            keyProperty="fileId">
        insert into trust_file (file_id, file_name, file_origin_name,
                                file_url, is_delete, create_time,
                                creator)
        values (#{fileId,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, #{fileOriginName,jdbcType=VARCHAR},
                #{fileUrl,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
                #{creator,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.trust.xfyl.model.po.TrustFile">
        <selectKey resultType="java.lang.Integer" order="AFTER"
                   keyProperty="fileId">
            SELECT LAST_INSERT_ID() AS file_id
        </selectKey>
        insert into trust_file
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="fileId != null">
                file_id,
            </if>
            <if test="fileName != null">
                file_name,
            </if>
            <if test="fileOriginName != null">
                file_origin_name,
            </if>
            <if test="fileUrl != null">
                file_url,
            </if>
            <if test="isDelete != null">
                is_delete,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="creator != null">
                creator,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="fileId != null">
                #{fileId,jdbcType=INTEGER},
            </if>
            <if test="fileName != null">
                #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileOriginName != null">
                #{fileOriginName,jdbcType=VARCHAR},
            </if>
            <if test="fileUrl != null">
                #{fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <insert id="afterInsertFile" parameterType="java.util.List" useGeneratedKeys="true"
            keyProperty="fileId">
        insert into trust_file
        (file_id, file_name, file_origin_name,
        file_url, is_delete, create_time,
        creator) VALUES
        <foreach collection="list" index="index" item="item" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">

                #{item.fileId,jdbcType=INTEGER},

                #{item.fileName,jdbcType=VARCHAR},

                #{item.fileOriginName,jdbcType=VARCHAR},

                #{item.fileUrl,jdbcType=VARCHAR},

                #{item.isDelete,jdbcType=INTEGER},

                #{item.createTime,jdbcType=TIMESTAMP},

                #{item.creator,jdbcType=VARCHAR},

            </trim>
        </foreach>
    </insert>
    <select id="countByExample" parameterType="com.trust.xfyl.model.po.TrustFileExample" resultType="java.lang.Integer">
        select count(*) from trust_file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update trust_file
        <set>
            <if test="record.fileId != null">
                file_id = #{record.fileId,jdbcType=INTEGER},
            </if>
            <if test="record.fileName != null">
                file_name = #{record.fileName,jdbcType=VARCHAR},
            </if>
            <if test="record.fileOriginName != null">
                file_origin_name = #{record.fileOriginName,jdbcType=VARCHAR},
            </if>
            <if test="record.fileUrl != null">
                file_url = #{record.fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="record.isDelete != null">
                is_delete = #{record.isDelete,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.creator != null">
                creator = #{record.creator,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update trust_file
        set file_id = #{record.fileId,jdbcType=INTEGER},
        file_name = #{record.fileName,jdbcType=VARCHAR},
        file_origin_name = #{record.fileOriginName,jdbcType=VARCHAR},
        file_url = #{record.fileUrl,jdbcType=VARCHAR},
        is_delete = #{record.isDelete,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        creator = #{record.creator,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.trust.xfyl.model.po.TrustFile">
        update trust_file
        <set>
            <if test="fileName != null">
                file_name = #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileOriginName != null">
                file_origin_name = #{fileOriginName,jdbcType=VARCHAR},
            </if>
            <if test="fileUrl != null">
                file_url = #{fileUrl,jdbcType=VARCHAR},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=VARCHAR},
            </if>
        </set>
        where file_id = #{fileId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.trust.xfyl.model.po.TrustFile">
        update trust_file
        set file_name        = #{fileName,jdbcType=VARCHAR},
            file_origin_name = #{fileOriginName,jdbcType=VARCHAR},
            file_url         = #{fileUrl,jdbcType=VARCHAR},
            is_delete        = #{isDelete,jdbcType=INTEGER},
            create_time      = #{createTime,jdbcType=TIMESTAMP},
            creator          = #{creator,jdbcType=VARCHAR}
        where file_id = #{fileId,jdbcType=INTEGER}
    </update>

    <select id="count" resultType="java.lang.Long" parameterType="com.trust.xfyl.model.po.TrustFile">
        select
        count(1)
        from(
        select
        <if test="distinct">
            distinct
        </if>
        'true' as QUERYID,
        <include refid="Base_Column_List"/>
        from trust_file
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        limit #{start,jdbcType=INTEGER},#{end,jdbcType=INTEGER}
        )f
    </select>
</mapper>